import Head from "next/head";
import { useState } from "react";
import getPlates, { convertWeight, getRoundedWeight } from "~/core/plates";
import { Unit } from "~/models/plates";

export default function Home() {
  const [unit, setUnit] = useState(Unit.Pounds);
  const [weight, setWeight] = useState(0);
  const [plates, setPlates] = useState([<></>]);

  const [pounds, setPounds] = useState(0);
  const [kilos, setKilos] = useState(0.0);

  return (
    <>
      <Head>
        <title>Barbell Math Calculator</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="h-12 content-center bg-zinc-900 text-center text-xl font-bold text-white">
        Barbell Calculator
      </div>

      <main className="flex min-h-screen flex-col items-center bg-zinc-800 py-8">
        <div className="flex flex-row items-center gap-2 pb-8">
          <input
            type="text"
            placeholder="lbs"
            value={pounds.toString()}
            onChange={(e) => {
              setPounds(Number(e.target.value));
              setKilos(
                Number(
                  convertWeight(Number(e.target.value), Unit.Pounds).toFixed(2),
                ),
              );
            }}
            className="h-8 w-24 rounded bg-zinc-700 text-center text-white"
          />
          <div className="font-bold text-white">{"<>"}</div>
          <input
            type="text"
            placeholder="kg"
            value={kilos.toString()}
            onChange={(e) => {
              setKilos(Number(e.target.value));
              setPounds(
                Number(
                  convertWeight(Number(e.target.value), Unit.Kilos).toFixed(2),
                ),
              );
            }}
            className="h-8 w-24 rounded bg-zinc-700 text-center text-white"
          />
        </div>

        <div className="flex flex-row gap-2 pb-4">
          <input
            type="number"
            className="h-8 w-48 rounded bg-zinc-700 text-center text-white"
            placeholder={`${unit.toLowerCase()}`}
            value={weight.toString()}
            onChange={(e) => setWeight(Number(e.target.value))}
          />
          <button
            className="w-10 rounded bg-purple-400 px-2 py-1 text-white"
            onClick={() => {
              setUnit(unit === Unit.Kilos ? Unit.Pounds : Unit.Kilos);
              setPlates([<></>]);
            }}
          >
            {unit === Unit.Kilos ? "kg" : "lbs"}
          </button>
        </div>

        <div className="pb-6">
          <button
            className="rounded bg-violet-400 px-2 py-1 text-white"
            type="submit"
            onClick={() => {
              setWeight(getRoundedWeight(weight, unit));
              setPlates(getPlates(weight, unit));
            }}
          >
            Calculate
          </button>
        </div>

        {/* <div className="h-72"> */}
        <div className="pb-8">
          {plates.map((plate) => {
            // render each plate with a key to silence console error
            return <div key={crypto.randomUUID()}>{plate}</div>;
          })}
        </div>

        {/* <div className="text-white">TODO: set count</div>
        <div className="text-white">TODO: timer</div> */}
      </main>
    </>
  );
}
